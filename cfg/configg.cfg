#! /usr/bin/env python
# Create a cfg file for getting control parameters for dmoc optimal controller

PACKAGE = "c2_ros"

from dynamic_reconfigure.parameter_generator_catkin import *
gen = ParameterGenerator()

#       Name          				Type      Reconfiguration level        Description   				Default   			Min   			 Max
#gen.add("iterate"     ,     bool_t     ,     0     ,     "Run one iteration of dmoc"  ,     False )

gen.add("max_speed"             , double_t    , 0                 , "max_speed" , 3     , 0   , 100)
gen.add("thrust_offset"             , double_t    , 0                 , "thrust_offset" , 0     , 0   , 1)
gen.add("Nit"             , int_t    , 0                 , "Number of iterations" , 5     , 0   , 200)
#gen.add("tf"              , double_t , 0                 , "Final Time"                   , 5      , 0   , 10	)
gen.add("eps"               , double_t    , 0                 , "10 power "           , -6     , -10   , 0	)
gen.add("x0"              , double_t , 0                 , "Initial xposn"                ,0   , -10 , 10	)
gen.add("y0"              , double_t , 0                 , "Initial yposn"                ,0  , -10 , 10	)
gen.add("theta0"          , double_t , 0                 , "Initial car angle"            , -0.468211    , -5  , 5	)
gen.add("vx0"              , double_t , 0                 , "Initial xvel"                 , 2.42782      , -5  , 5	)
gen.add("vy0"              , double_t , 0                 , "Initial yvel"                 ,  3.99035      , -5  , 5	)
gen.add("omega0"              , double_t , 0                 , "Initial omegavel"                 , -0.598853      , -5  , 5	)
gen.add("xN"              , double_t , 0                 , "Final xposn"                  , 1     , -10 , 10	)
gen.add("yN"              , double_t , 0                 , "Final yposn"                  ,2      , -10 , 10	)
gen.add("thetaN"          , double_t , 0                 , "Final angle of the car"       , 0      , -5  , 5	)
gen.add("vxN"              , double_t , 0                 , "FinalBody x vel"            , 0      , -5  , 5	)
gen.add("vyN"              , double_t , 0                 , "FinalBody y vel"            , 0      , -5  , 5	)
gen.add("omegaN"              , double_t , 0                 , "FinalBody ang vel"            , 0      , -5  , 5	)
gen.add("Q1"              , double_t , 0                 , "Statecost"                    , 0      , 0   , 100	)
gen.add("Q2"              , double_t , 0                 , "Statecost"                    , 0      , 0   , 100	)
gen.add("Q3"              , double_t , 0                 , "Statecost"                    , 0      , 0   , 100	)
gen.add("Q4"              , double_t , 0                 , "Statecost"                    , 0    , 0   , 100	)
gen.add("Q5"              , double_t , 0                 , "Statecost"                    , 0    , 0   , 100	)
gen.add("Q6"              , double_t , 0                 , "Statecost"                    , 0    , 0   , 100	)
gen.add("Qf1"             , double_t , 0                 , "FinStatecost"                 , 1     , 0   , 100	)
gen.add("Qf2"             , double_t , 0                 , "FinStatecost"                 , 5     , 0   , 100	)
gen.add("Qf3"             , double_t , 0                 , "FinStatecost"                 , 5     , 0   , 100	)
gen.add("Qf4"             , double_t , 0                 , "FinStatecost"                 , 0.1      , 0   , 100	)
gen.add("Qf5"             , double_t , 0                 , "FinStatecost"                 , 0.5      , 0   , 100	)
gen.add("Qf6"             , double_t , 0                 , "FinStatecost"                 , 0.5      , 0   , 100	)
gen.add("R1"              , double_t , 0                 , "Controlcost"                  , 0.01      , 0   , 100	)
gen.add("R2"              , double_t , 0                 , "Controlcost"                  , 0.05    , 0   , 100	)
gen.add("mu"              , double_t , 0                 , ""                             , 0.01   , 0   , 100	)


exit(gen.generate(PACKAGE , "c2_ros" , "DDPInterface"))




